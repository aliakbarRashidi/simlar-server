/*
 * Copyright (C) 2015 The Simlar Authors.
 *
 * This file is part of Simlar. (https://www.simlar.org)
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 *
 */

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'war'
apply plugin: 'findbugs'
apply plugin: 'pmd'
apply plugin: 'com.github.ben-manes.versions'

def getGitVersion = { ->
    try {
        return "git -C ${rootDir} describe --tags --always --dirty".execute().text.trim()
    }
    catch (ignored) {
        return "git-not-found"
    }
}

version = getGitVersion()

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.8.RELEASE")
        classpath("com.github.ben-manes:gradle-versions-plugin:0.15.0")
    }
}

war {
    baseName = 'simlar-server'
    rootSpec.exclude('local.properties')
}

repositories {
    mavenCentral()
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web-services")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("com.h2database:h2") // spring pulls in 1.4.194
    compile("com.google.code.findbugs:annotations:3.0.1")
    compile("org.apache.commons:commons-lang3:3.6")
    compile("org.apache.commons:commons-text:1.1")
    compile("commons-codec:commons-codec:1.11")
    compile("com.googlecode.libphonenumber:libphonenumber:8.8.4")
    compileOnly("org.projectlombok:lombok:1.16.18")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("junit:junit:4.12")
    testCompile("org.mockito:mockito-core:2.11.0")
    runtime("mysql:mysql-connector-java")
    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat") // disable this to run in IntelliJ CE

    findbugs("com.google.code.findbugs:findbugs:3.0.1")
    /// IntelliJ plugin use this version
    /// see: https://github.com/andrepdo/findbugs-idea/tree/master/src/src/impl/org/twodividedbyzero/idea/findbugs/plugins
    findbugsPlugins("com.mebigfatguy.fb-contrib:fb-contrib:6.8.2")
}

//noinspection GroovyMissingReturnStatement
test {
    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
    }
}

pmd {
    toolVersion = '5.8.1'
}

findbugs {
    effort = "max"
    reportLevel = "low"
    excludeFilter = file("$rootProject.projectDir/ides/findbugs/excludeFilter.xml")
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}

processResources {
    expand(project.properties)
}

idea {
    module {
        excludeDirs += file('ides')
        excludeDirs += file('examples')
    }
}
